<?php

namespace AppBundle\Entity;
use Doctrine\ORM\EntityRepository;


/**
 * DescargaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DescargaRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllOrderedByDate($id_usuario)
    {
        try{
            $descargas = $this->getEntityManager()
                ->createQuery(
                    'SELECT d FROM AppBundle:Descarga d WHERE d.usuarioIdUsuario = :id_usuario ORDER BY d.fecha DESC'
                )->setParameter('id_usuario',$id_usuario)
                ->getResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }
        return $descargas;
    }

    public function count_downloads_current_year($current_month,$current_year,$id_usuario)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(d.idDescarga)')
            ->from('AppBundle:Descarga', 'd')
            ->where('YEAR(d.fecha) = :current_year')
            ->andWhere('MONTH(d.fecha) = :current_month')
            ->andWhere('d.usuarioIdUsuario = :id_usuario')
            ->groupBy('d.usuarioIdUsuario')
            ->setParameter('current_year', $current_year)
            ->setParameter('current_month', $current_month)
            ->setParameter('id_usuario', $id_usuario);
        try{
            $result = $qb->getQuery()->getSingleScalarResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }

        return $result;
    }

    public function count_downloads_history($year,$id_usuario)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(d.idDescarga)')
            ->from('AppBundle:Descarga', 'd')
            ->where('YEAR(d.fecha) = :year')
            ->andWhere('d.usuarioIdUsuario = :id_usuario')
            ->groupBy('d.usuarioIdUsuario')
            ->setParameter('year', $year)
            ->setParameter('id_usuario', $id_usuario);
        try{
            $result = $qb->getQuery()->getSingleScalarResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }

        return $result;
    }

    public function count_downloads($month,$year)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(d.idDescarga)')
            ->from('AppBundle:Descarga', 'd')
            ->where('YEAR(d.fecha) = :year')
            ->andWhere('MONTH(d.fecha) = :current_month')

            ->setParameter('year', $year)
            ->setParameter('current_month', $month);
        try{
            $result = $qb->getQuery()->getSingleScalarResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }

        return $result;
    }
}
