<?php

namespace AppBundle\Entity;
use Doctrine\ORM\EntityRepository;

use \DateTime;
/**
 * DescargaVirtualRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DescargaVirtualRepository extends \Doctrine\ORM\EntityRepository
{
    public function count_downloads($current_year)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(d.idDescarga)')
            ->from('AppBundle:DescargaVirtual', 'd')
            ->where('YEAR(d.fecha) = :current_year')

            ->setParameter('current_year', $current_year);

        try{
            $result = $qb->getQuery()->getSingleScalarResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }

        return $result;
    }

    public function count_downloads_expo($fecha)
    {
       $fecha = new DateTime($fecha);

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(d.idDescarga)')
            ->from('AppBundle:DescargaVirtual', 'd')
            ->where('YEAR(d.fecha) = :year')
            ->andwhere('MONTH(d.fecha) = :month')
            ->andwhere('DAY(d.fecha) = :day')
            ->setParameter('year', $fecha->format('Y'))
            ->setParameter('month', $fecha->format('m'))
            ->setParameter('day', $fecha->format('d'));

        try{
            $result = $qb->getQuery()->getSingleScalarResult();
        }catch (\Doctrine\ORM\NoResultException $e){
            return false;
        }

        return $result;
    }


}
